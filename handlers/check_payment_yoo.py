from loader import dp, bot
from aiogram import types
from aiogram.dispatcher.storage import FSMContext
from utils import qiwi, database, generate_random_good, yoomoneyx
import datetime
from utils.get_price import get_price
from keyboards import payment_methods_keyboard
import asyncio
import json

@dp.callback_query_handler(text='YOOcheck_payment_Archive')
async def check_payment(callback: types.CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        payment: yoomoneyx.PaymentYoo = data['payment_yoo']
    if payment.check_payment() or (database.get_user(callback.from_user.id)['unlimited'] > datetime.datetime.now().date()):
        await callback.message.edit_text(f'–û–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞!\n\n–°—Å—ã–ª–∫–∞ –Ω–∞ –∞—Ä—Ö–∏–≤: {generate_random_good.get_random_archive()}')
        if payment.check_payment():
            with open('data/config.json') as json_file:
                config = json.load(json_file)
            percentage = float(database.get_user(database.get_user(callback.from_user.id)['invited_by'])['percentage'])
            percentage = float(database.get_user(database.get_user(callback.from_user.id)['invited_by'])['percentage'])
            purchases = config['Statistics']['Purchases']
            total_earned = config['Statistics']['Total_Earned']
            config['Statistics']['Purchases'] = purchases + 1
            config['Statistics']['Total_Earned'] = int(total_earned) + int(payment.amount)
            admins = config['Bot_Data']['Admins']
            for admin in admins:
                try:
                    await bot.send_message(admin, f'<b>üíµüíµ–ù–æ–≤–∞—è –ø–æ–∫—É–ø–∫–∞!üíµüíµ</b>\n\n<b>–Æ–∑–µ—Ä: </b><code>{callback.from_user.username} ({callback.from_user.id})</code>\n<b>–°—É–º–º–∞: </b><code>{payment.amount}</code>\n<b>–ü—Ä–∏–≥–ª–∞—Å–∏–ª: <code>{database.get_user(database.get_user(callback.from_user.id)["invited_by"])["username"]} ({database.get_user(callback.from_user.id)["invited_by"]})</code></b>')
                except:
                    pass
            try:
                referal_balance = database.get_user(database.get_user(callback.from_user.id)['invited_by'])['balance']
                database.update_user(database.get_user(callback.from_user.id)['invited_by'], 'balance', (float(referal_balance) + int(payment.amount) * float(percentage)))
            except Exception as e:
                print(e)
            with open('data/config.json', 'w') as json_file:
                json.dump(config, json_file)
    else:
        await callback.answer('–û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!')
    
@dp.callback_query_handler(text='YOOcheck_payment_Photo')
async def check_payment(callback: types.CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        payment: yoomoneyx.PaymentYoo = data['payment_yoo']
    if payment.check_payment() or (database.get_user(callback.from_user.id)['unlimited'] > datetime.datetime.now().date()):
        await callback.message.edit_text(f'–û–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞!\n\n–°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–æ—Ç–æ: {generate_random_good.get_random_photo()}')
        if payment.check_payment():
            with open('data/config.json') as json_file:
                config = json.load(json_file)
            percentage = float(database.get_user(database.get_user(callback.from_user.id)['invited_by'])['percentage'])
            purchases = config['Statistics']['Purchases']
            total_earned = config['Statistics']['Total_Earned']
            config['Statistics']['Purchases'] = purchases + 1
            config['Statistics']['Total_Earned'] = int(total_earned) + int(payment.amount)
            admins = config['Bot_Data']['Admins']
            for admin in admins:
                try:
                    await bot.send_message(admin, f'<b>üíµüíµ–ù–æ–≤–∞—è –ø–æ–∫—É–ø–∫–∞!üíµüíµ</b>\n\n<b>–Æ–∑–µ—Ä: </b><code>{callback.from_user.username} ({callback.from_user.id})</code>\n<b>–°—É–º–º–∞: </b><code>{payment.amount}</code>\n<b>–ü—Ä–∏–≥–ª–∞—Å–∏–ª: <code>{database.get_user(database.get_user(callback.from_user.id)["invited_by"])["username"]} ({database.get_user(callback.from_user.id)["invited_by"]})</code></b>')
                except:
                    pass
            try:
                referal_balance = database.get_user(database.get_user(callback.from_user.id)['invited_by'])['balance']
                database.update_user(database.get_user(callback.from_user.id)['invited_by'], 'balance', (float(referal_balance) + int(payment.amount) * float(percentage)))
            except Exception as e:
                print(e)
            with open('data/config.json', 'w') as json_file:
                json.dump(config, json_file)
    else:
        await callback.answer('–û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!')
    
@dp.callback_query_handler(text='YOOcheck_payment_Phone_Number')
async def check_payment(callback: types.CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        payment: yoomoneyx.PaymentYoo = data['payment_yoo']
    if payment.check_payment() or (database.get_user(callback.from_user.id)['unlimited'] > datetime.datetime.now().date()):
        await callback.message.edit_text(f'–û–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞!\n\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {generate_random_good.generate_phone_number()}')
        if payment.check_payment():
            with open('data/config.json') as json_file:
                config = json.load(json_file)
            percentage = float(database.get_user(database.get_user(callback.from_user.id)['invited_by'])['percentage'])
            purchases = config['Statistics']['Purchases']
            total_earned = config['Statistics']['Total_Earned']
            config['Statistics']['Purchases'] = purchases + 1
            config['Statistics']['Total_Earned'] = int(total_earned) + int(payment.amount)
            admins = config['Bot_Data']['Admins']
            for admin in admins:
                try:
                    await bot.send_message(admin, f'<b>üíµüíµ–ù–æ–≤–∞—è –ø–æ–∫—É–ø–∫–∞!üíµüíµ</b>\n\n<b>–Æ–∑–µ—Ä: </b><code>{callback.from_user.username} ({callback.from_user.id})</code>\n<b>–°—É–º–º–∞: </b><code>{payment.amount}</code>\n<b>–ü—Ä–∏–≥–ª–∞—Å–∏–ª: <code>{database.get_user(database.get_user(callback.from_user.id)["invited_by"])["username"]} ({database.get_user(callback.from_user.id)["invited_by"]})</code></b>')
                except:
                    pass
            try:
                referal_balance = database.get_user(database.get_user(callback.from_user.id)['invited_by'])['balance']
                database.update_user(database.get_user(callback.from_user.id)['invited_by'], 'balance', (float(referal_balance) + int(payment.amount) * float(percentage)))
            except Exception as e:
                print(e)
            with open('data/config.json', 'w') as json_file:
                json.dump(config, json_file)
    else:
        await callback.answer('–û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!')

@dp.callback_query_handler(text='YOOcheck_payment_Messages_Archive')
async def check_payment(callback: types.CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        payment: yoomoneyx.PaymentYoo = data['payment_yoo']
    if payment.check_payment() or (database.get_user(callback.from_user.id)['unlimited'] > datetime.datetime.now().date()):
        await callback.message.edit_text(f'–û–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞!\n\n–°—Å—ã–ª–∫–∞ –Ω–∞ –∞—Ä—Ö–∏–≤ —Å –ø–µ—Ä–µ–ø–∏—Å–∫–∞–º–∏: {generate_random_good.get_random_messages()}')
        if payment.check_payment():
            with open('data/config.json') as json_file:
                config = json.load(json_file)
            percentage = float(database.get_user(database.get_user(callback.from_user.id)['invited_by'])['percentage'])
            purchases = config['Statistics']['Purchases']
            total_earned = config['Statistics']['Total_Earned']
            config['Statistics']['Purchases'] = purchases + 1
            config['Statistics']['Total_Earned'] = int(total_earned) + int(payment.amount)
            admins = config['Bot_Data']['Admins']
            for admin in admins:
                try:
                    await bot.send_message(admin, f'<b>üíµüíµ–ù–æ–≤–∞—è –ø–æ–∫—É–ø–∫–∞!üíµüíµ</b>\n\n<b>–Æ–∑–µ—Ä: </b><code>{callback.from_user.username} ({callback.from_user.id})</code>\n<b>–°—É–º–º–∞: </b><code>{payment.amount}</code>\n<b>–ü—Ä–∏–≥–ª–∞—Å–∏–ª: <code>{database.get_user(database.get_user(callback.from_user.id)["invited_by"])["username"]} ({database.get_user(callback.from_user.id)["invited_by"]})</code></b>')
                except:
                    pass
            try:
                referal_balance = database.get_user(database.get_user(callback.from_user.id)['invited_by'])['balance']
                database.update_user(database.get_user(callback.from_user.id)['invited_by'], 'balance', (float(referal_balance) + int(payment.amount) * float(percentage)))
            except Exception as e:
                print(e)
            with open('data/config.json', 'w') as json_file:
                json.dump(config, json_file)
    else:
        await callback.answer('–û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!')

@dp.callback_query_handler(text='YOOcheck_payment_Unlimited_1')
async def check_payment(callback: types.CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        payment: yoomoneyx.PaymentYoo = data['payment_yoo']
    if payment.check_payment():
        with open('data/config.json') as json_file:
            config = json.load(json_file)
        percentage = float(database.get_user(database.get_user(callback.from_user.id)['invited_by'])['percentage'])
        purchases = config['Statistics']['Purchases']
        total_earned = config['Statistics']['Total_Earned']
        config['Statistics']['Purchases'] = purchases + 1
        config['Statistics']['Total_Earned'] = int(total_earned) + int(payment.amount)
        admins = config['Bot_Data']['Admins']
        for admin in admins:
            try:
                await bot.send_message(admin, f'<b>üíµüíµ–ù–æ–≤–∞—è –ø–æ–∫—É–ø–∫–∞!üíµüíµ</b>\n\n<b>–Æ–∑–µ—Ä: </b><code>{callback.from_user.username} ({callback.from_user.id})</code>\n<b>–°—É–º–º–∞: </b><code>{payment.amount}</code>\n<b>–ü—Ä–∏–≥–ª–∞—Å–∏–ª: <code>{database.get_user(database.get_user(callback.from_user.id)["invited_by"])["username"]} ({database.get_user(callback.from_user.id)["invited_by"]})</code></b>')
            except:
                pass
        try:
            referal_balance = database.get_user(database.get_user(callback.from_user.id)['invited_by'])['balance']
            database.update_user(database.get_user(callback.from_user.id)['invited_by'], 'balance', (float(referal_balance) + int(payment.amount) * float(percentage)))
        except Exception as e:
            print(e)
        with open('data/config.json', 'w') as json_file:
            json.dump(config, json_file)
        date = datetime.datetime.now().date() + datetime.timedelta(days=1)
        database.update_user(callback.from_user.id, 'unlimited', date)
        await callback.message.edit_text(f'–û–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞!\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –≤ —Ç–µ—á–µ–Ω–∏–∏ 1 –¥–Ω—è!\n\n<b><i>–ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∫–∞–∫–æ–π-–ª–∏–±–æ —É—Å–ª—É–≥–∏ –Ω–∞–∂–º–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É, –µ—Å–ª–∏ —É –≤–∞—Å –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω –±–µ–∑–ª–∏–º–∏—Ç - –ø–ª–∞—Ç–∏—Ç—å –Ω–µ –ø—Ä–∏–¥–µ—Ç—Å—è!</i></b>')
    else:
        await callback.answer('–û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!')

@dp.callback_query_handler(text='YOOcheck_payment_Unlimited_7')
async def check_payment(callback: types.CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        payment: yoomoneyx.PaymentYoo = data['payment_yoo']
    if payment.check_payment():
        with open('data/config.json') as json_file:
            config = json.load(json_file)
        percentage = float(database.get_user(database.get_user(callback.from_user.id)['invited_by'])['percentage'])
        purchases = config['Statistics']['Purchases']
        total_earned = config['Statistics']['Total_Earned']
        config['Statistics']['Purchases'] = purchases + 1
        config['Statistics']['Total_Earned'] = int(total_earned) + int(payment.amount)
        admins = config['Bot_Data']['Admins']
        for admin in admins:
            try:
                await bot.send_message(admin, f'<b>üíµüíµ–ù–æ–≤–∞—è –ø–æ–∫—É–ø–∫–∞!üíµüíµ</b>\n\n<b>–Æ–∑–µ—Ä: </b><code>{callback.from_user.username} ({callback.from_user.id})</code>\n<b>–°—É–º–º–∞: </b><code>{payment.amount}</code>\n<b>–ü—Ä–∏–≥–ª–∞—Å–∏–ª: <code>{database.get_user(database.get_user(callback.from_user.id)["invited_by"])["username"]} ({database.get_user(callback.from_user.id)["invited_by"]})</code></b>')
            except:
                pass
        try:
            referal_balance = database.get_user(database.get_user(callback.from_user.id)['invited_by'])['balance']
            database.update_user(database.get_user(callback.from_user.id)['invited_by'], 'balance', (float(referal_balance) + int(payment.amount) * float(percentage)))
        except Exception as e:
            print(e)
        with open('data/config.json', 'w') as json_file:
            json.dump(config, json_file)
        date = datetime.datetime.now().date() + datetime.timedelta(days=7)
        database.update_user(callback.from_user.id, 'unlimited', date)
        await callback.message.edit_text(f'–û–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞!\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –≤ —Ç–µ—á–µ–Ω–∏–∏ 7 –¥–Ω–µ–π!\n\n<b><i>–ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∫–∞–∫–æ–π-–ª–∏–±–æ —É—Å–ª—É–≥–∏ –Ω–∞–∂–º–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É, –µ—Å–ª–∏ —É –≤–∞—Å –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω –±–µ–∑–ª–∏–º–∏—Ç - –ø–ª–∞—Ç–∏—Ç—å –Ω–µ –ø—Ä–∏–¥–µ—Ç—Å—è!</i></b>')
    else:
        await callback.answer('–û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!')

@dp.callback_query_handler(text='YOOcheck_payment_Unlimited_30')
async def check_payment(callback: types.CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        payment: yoomoneyx.PaymentYoo = data['payment_yoo']
    if payment.check_payment():
        with open('data/config.json') as json_file:
            config = json.load(json_file)
        percentage = float(database.get_user(database.get_user(callback.from_user.id)['invited_by'])['percentage'])
        purchases = config['Statistics']['Purchases']
        total_earned = config['Statistics']['Total_Earned']
        config['Statistics']['Purchases'] = purchases + 1
        config['Statistics']['Total_Earned'] = int(total_earned) + int(payment.amount)
        admins = config['Bot_Data']['Admins']
        for admin in admins:
            try:
                await bot.send_message(admin, f'<b>üíµüíµ–ù–æ–≤–∞—è –ø–æ–∫—É–ø–∫–∞!üíµüíµ</b>\n\n<b>–Æ–∑–µ—Ä: </b><code>{callback.from_user.username} ({callback.from_user.id})</code>\n<b>–°—É–º–º–∞: </b><code>{payment.amount}</code>\n<b>–ü—Ä–∏–≥–ª–∞—Å–∏–ª: <code>{database.get_user(database.get_user(callback.from_user.id)["invited_by"])["username"]} ({database.get_user(callback.from_user.id)["invited_by"]})</code></b>')
            except:
                pass
        try:
            referal_balance = database.get_user(database.get_user(callback.from_user.id)['invited_by'])['balance']
            database.update_user(database.get_user(callback.from_user.id)['invited_by'], 'balance', (float(referal_balance) + int(payment.amount) * float(percentage)))
        except Exception as e:
            print(e)
        with open('data/config.json', 'w') as json_file:
            json.dump(config, json_file)
        date = datetime.datetime.now().date() + datetime.timedelta(days=30)
        database.update_user(callback.from_user.id, 'unlimited', date)
        await callback.message.edit_text(f'–û–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞!\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –≤ —Ç–µ—á–µ–Ω–∏–∏ 30 –¥–Ω–µ–π!\n\n<b><i>–ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∫–∞–∫–æ–π-–ª–∏–±–æ —É—Å–ª—É–≥–∏ –Ω–∞–∂–º–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É, –µ—Å–ª–∏ —É –≤–∞—Å –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω –±–µ–∑–ª–∏–º–∏—Ç - –ø–ª–∞—Ç–∏—Ç—å –Ω–µ –ø—Ä–∏–¥–µ—Ç—Å—è!</i></b>')
    else:
        await callback.answer('–û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!')

@dp.callback_query_handler(text='YOOcheck_payment_Phone_Number_Leaks')
async def check_payment(callback: types.CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        payment: yoomoneyx.PaymentYoo = data['payment_yoo']
    if payment.check_payment() or (database.get_user(callback.from_user.id)['unlimited'] > datetime.datetime.now().date()):
        if payment.check_payment():
            with open('data/config.json') as json_file:
                config = json.load(json_file)
            percentage = float(database.get_user(database.get_user(callback.from_user.id)['invited_by'])['percentage'])
            purchases = config['Statistics']['Purchases']
            total_earned = config['Statistics']['Total_Earned']
            config['Statistics']['Purchases'] = purchases + 1
            config['Statistics']['Total_Earned'] = int(total_earned) + int(payment.amount)
            admins = config['Bot_Data']['Admins']
            for admin in admins:
                try:
                    await bot.send_message(admin, f'<b>üíµüíµ–ù–æ–≤–∞—è –ø–æ–∫—É–ø–∫–∞!üíµüíµ</b>\n\n<b>–Æ–∑–µ—Ä: </b><code>{callback.from_user.username} ({callback.from_user.id})</code>\n<b>–°—É–º–º–∞: </b><code>{payment.amount}</code>\n<b>–ü—Ä–∏–≥–ª–∞—Å–∏–ª: <code>{database.get_user(database.get_user(callback.from_user.id)["invited_by"])["username"]} ({database.get_user(callback.from_user.id)["invited_by"]})</code></b>')
                except:
                    pass
            try:
                referal_balance = database.get_user(database.get_user(callback.from_user.id)['invited_by'])['balance']
                database.update_user(database.get_user(callback.from_user.id)['invited_by'], 'balance', (float(referal_balance) + int(payment.amount) * float(percentage)))
            except Exception as e:
                print(e)
            with open('data/config.json', 'w') as json_file:
                json.dump(config, json_file)
        try:
            price = get_price('Archive')
            payment_2 = yoomoneyx.PaymentYoo()
            payment_2.create(price, 'Archive')
            await callback.message.edit_text(f'<b>–ü–æ–∏—Å–∫...</b>')
            await asyncio.sleep(5)
            text = f'–°–ª–∏–≤ –Ω–∞–π–¥–µ–Ω!\n\n<b>üíµ –ö –æ–ø–ª–∞—Ç–µ: </b>{price}‚ÇΩ\n\n<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã üëá</b>'
            await callback.message.edit_text(text, reply_markup=payment_methods_keyboard.keyboard)
            async with state.proxy() as data:
                data['payment'] = payment_2
        except Exception as e:
            if e.args[0] == 'Wallet is banned':
                await callback.message.edit_text('<b>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∫–æ—à–µ–ª–µ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö—Ä–æ–¥–¥–µ—Ä–∂–∫—É.</b>')
            else:
                await callback.message.edit_text('<b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É</b>')
    else:
        await callback.answer('–û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!')

@dp.callback_query_handler(text='YOOcheck_payment_Phone_Number_Info')
async def check_payment(callback: types.CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        payment: yoomoneyx.PaymentYoo = data['payment_yoo']
    if payment.check_payment() or (database.get_user(callback.from_user.id)['unlimited'] > datetime.datetime.now().date()):
        await callback.message.edit_text(f'–û–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞!\n\n–°—Å—ã–ª–∫–∞ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é: https://disk.yandex.ru/d/_d1j8kWdf3zx')
        if payment.check_payment():
            with open('data/config.json') as json_file:
                config = json.load(json_file)
            percentage = float(database.get_user(database.get_user(callback.from_user.id)['invited_by'])['percentage'])
            purchases = config['Statistics']['Purchases']
            total_earned = config['Statistics']['Total_Earned']
            config['Statistics']['Purchases'] = purchases + 1
            config['Statistics']['Total_Earned'] = int(total_earned) + int(payment.amount)
            admins = config['Bot_Data']['Admins']
            for admin in admins:
                try:
                    await bot.send_message(admin, f'<b>üíµüíµ–ù–æ–≤–∞—è –ø–æ–∫—É–ø–∫–∞!üíµüíµ</b>\n\n<b>–Æ–∑–µ—Ä: </b><code>{callback.from_user.username} ({callback.from_user.id})</code>\n<b>–°—É–º–º–∞: </b><code>{payment.amount}</code>\n<b>–ü—Ä–∏–≥–ª–∞—Å–∏–ª: <code>{database.get_user(database.get_user(callback.from_user.id)["invited_by"])["username"]} ({database.get_user(callback.from_user.id)["invited_by"]})</code></b>')
                except:
                    pass
            try:
                referal_balance = database.get_user(database.get_user(callback.from_user.id)['invited_by'])['balance']
                database.update_user(database.get_user(callback.from_user.id)['invited_by'], 'balance', (float(referal_balance) + int(payment.amount) * float(percentage)))
            except Exception as e:
                print(e)
            with open('data/config.json', 'w') as json_file:
                json.dump(config, json_file)
    else:
        await callback.answer('–û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!')

@dp.callback_query_handler(text='YOOcheck_payment_Tiktok_Videos')
async def check_payment(callback: types.CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        payment: yoomoneyx.PaymentYoo = data['payment_yoo']
    if payment.check_payment() or (database.get_user(callback.from_user.id)['unlimited'] > datetime.datetime.now().date()):
        await callback.message.edit_text(f'–û–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞!\n\n–°—Å—ã–ª–∫–∞ –Ω–∞ –∞—Ä—Ö–∏–≤ —Å –≤–∏–¥–µ–æ: https://disk.yandex.ru/d/_d1j8kWdCx3f')
        if payment.check_payment():
            with open('data/config.json') as json_file:
                config = json.load(json_file)
            percentage = float(database.get_user(database.get_user(callback.from_user.id)['invited_by'])['percentage'])
            purchases = config['Statistics']['Purchases']
            total_earned = config['Statistics']['Total_Earned']
            config['Statistics']['Purchases'] = purchases + 1
            config['Statistics']['Total_Earned'] = int(total_earned) + int(payment.amount)
            admins = config['Bot_Data']['Admins']
            for admin in admins:
                try:
                    await bot.send_message(admin, f'<b>üíµüíµ–ù–æ–≤–∞—è –ø–æ–∫—É–ø–∫–∞!üíµüíµ</b>\n\n<b>–Æ–∑–µ—Ä: </b><code>{callback.from_user.username} ({callback.from_user.id})</code>\n<b>–°—É–º–º–∞: </b><code>{payment.amount}</code>\n<b>–ü—Ä–∏–≥–ª–∞—Å–∏–ª: <code>{database.get_user(database.get_user(callback.from_user.id)["invited_by"])["username"]} ({database.get_user(callback.from_user.id)["invited_by"]})</code></b>')
                except:
                    pass
            try:
                referal_balance = database.get_user(database.get_user(callback.from_user.id)['invited_by'])['balance']
                database.update_user(database.get_user(callback.from_user.id)['invited_by'], 'balance', (float(referal_balance) + int(payment.amount) * float(percentage)))
            except Exception as e:
                print(e)
            with open('data/config.json', 'w') as json_file:
                json.dump(config, json_file)
    else:
        await callback.answer('–û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!')