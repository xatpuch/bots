from loader import dp
from aiogram import types
from aiogram.utils.markdown import hlink
from aiogram.dispatcher.storage import FSMContext
from utils import qiwi, yoomoneyx
from utils.get_price import get_price
from keyboards import payment_methods_keyboard, purchase_unlimited_keyboard, payment_keyboard

@dp.callback_query_handler(text='buy_archive')
async def buy_archive(callback: types.CallbackQuery, state: FSMContext):
    try:
        price = get_price('Archive')
        payment = qiwi.Payment()
        payment_yoo = yoomoneyx.PaymentYoo()
        payment_yoo.create(price, 'Archive')
        payment.create(price, 'Archive')
        text = f'<b>üíµ –ö –æ–ø–ª–∞—Ç–µ: </b>{price}‚ÇΩ\n\n<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã üëá</b>'
        
        await callback.message.edit_text(text, reply_markup=payment_methods_keyboard.keyboard)
        async with state.proxy() as data:
            data['payment'] = payment
            data['payment_yoo'] = payment_yoo
    except Exception as e:
        print(e)
        if e.args[0] == 'Qiwi wallet is banned':
            await callback.message.edit_text('<b>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∫–æ—à–µ–ª–µ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö—Ä–æ–¥–¥–µ—Ä–∂–∫—É.</b>')
        else:
            await callback.message.edit_text('<b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É</b>')

@dp.callback_query_handler(text='buy_photo')
async def buy_photo(callback: types.CallbackQuery, state: FSMContext):
    try: 
        price = get_price('Photo')
        payment = qiwi.Payment()
        payment_yoo = yoomoneyx.PaymentYoo()
        payment_yoo.create(price, 'Archive')
        payment.create(price, 'Photo')
        text = f'<b>üíµ –ö –æ–ø–ª–∞—Ç–µ: </b>{price}‚ÇΩ\n\n<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã üëá</b>'
        
        await callback.message.edit_text(text, reply_markup=payment_methods_keyboard.keyboard)
        async with state.proxy() as data:
            data['payment'] = payment
            data['payment_yoo'] = payment_yoo
    except Exception as e:
        if e.args[0] == 'Qiwi wallet is banned':
            await callback.message.edit_text('<b>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∫–æ—à–µ–ª–µ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö—Ä–æ–¥–¥–µ—Ä–∂–∫—É.</b>')
        else:
            await callback.message.edit_text('<b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É</b>')

@dp.callback_query_handler(text='buy_phone')
async def buy_phone(callback: types.CallbackQuery, state: FSMContext):
    try: 
        price = get_price('Phone_Number')
        payment = qiwi.Payment()
        payment_yoo = yoomoneyx.PaymentYoo()
        payment_yoo.create(price, 'Archive')
        payment.create(price, 'Phone_Number')
        text = f'<b>üíµ –ö –æ–ø–ª–∞—Ç–µ: </b>{price}‚ÇΩ\n\n<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã üëá</b>'
        
        await callback.message.edit_text(text, reply_markup=payment_methods_keyboard.keyboard)
        async with state.proxy() as data:
            data['payment'] = payment
            data['payment_yoo'] = payment_yoo
    except Exception as e:
        if e.args[0] == 'Qiwi wallet is banned':
            await callback.message.edit_text('<b>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∫–æ—à–µ–ª–µ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö—Ä–æ–¥–¥–µ—Ä–∂–∫—É.</b>')
        else:
            await callback.message.edit_text('<b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É</b>')

@dp.callback_query_handler(text='buy_messages')
async def buy_messages(callback: types.CallbackQuery, state: FSMContext):
    try: 
        price = get_price('Messages_Archive')
        payment = qiwi.Payment()
        payment_yoo = yoomoneyx.PaymentYoo()
        payment_yoo.create(price, 'Archive')
        payment.create(price, 'Messages_Archive')
        text = f'<b>üíµ –ö –æ–ø–ª–∞—Ç–µ: </b>{price}‚ÇΩ\n\n<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã üëá</b>'
        
        await callback.message.edit_text(text, reply_markup=payment_methods_keyboard.keyboard)
        async with state.proxy() as data:
            data['payment'] = payment
            data['payment_yoo'] = payment_yoo
    except Exception as e:
        if e.args[0] == 'Qiwi wallet is banned':
            await callback.message.edit_text('<b>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∫–æ—à–µ–ª–µ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö—Ä–æ–¥–¥–µ—Ä–∂–∫—É.</b>')
        else:
            await callback.message.edit_text('<b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É</b>')

@dp.callback_query_handler(text='buy_unlimited')
async def buy_unlimited(callback: types.CallbackQuery):
    text = '<b>üí≥ –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏\n\nüîé –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –ø–æ–∏—Å–∫ -  –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º, –±—ã—Å—Ç—Ä–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö.\n\nüíó –ó–∞–±–∏—Ä–∞–π—Ç–µ —Ñ—É–ª–ª—ã –≤—Å–µ—Ö –¥–µ–≤–æ—á–µ–∫, –ø–æ–∫–∞ —É –≤–∞—Å –µ—Å—Ç—å üëâüèª üîé –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –ø–æ–∏—Å–∫\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ –æ–ø–ª–∞—Ç—ã üëá</b>'
    await callback.message.edit_text(text, reply_markup=purchase_unlimited_keyboard.make_keyboard())

@dp.callback_query_handler(text='unlimited_one_day')
async def buy_unlimited_one_day(callback: types.CallbackQuery, state: FSMContext):
    try:
        price = get_price('Unlimited_1')
        payment = qiwi.Payment()
        payment_yoo = yoomoneyx.PaymentYoo()
        payment_yoo.create(price, 'Archive')
        payment.create(price, 'Unlimited_1')
        text = f'<b>üíµ –ö –æ–ø–ª–∞—Ç–µ: </b>{price}‚ÇΩ\n\n<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã üëá</b>'
        
        await callback.message.edit_text(text, reply_markup=payment_methods_keyboard.keyboard)
        async with state.proxy() as data:
            data['payment'] = payment
            data['payment_yoo'] = payment_yoo
    except Exception as e:
        if e.args[0] == 'Qiwi wallet is banned':
            await callback.message.edit_text('<b>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∫–æ—à–µ–ª–µ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö—Ä–æ–¥–¥–µ—Ä–∂–∫—É.</b>')
        else:
            await callback.message.edit_text('<b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É</b>')

@dp.callback_query_handler(text='unlimited_week')
async def buy_unlimited_one_day(callback: types.CallbackQuery, state: FSMContext):
    try:
        price = get_price('Unlimited_7')
        payment = qiwi.Payment()
        payment_yoo = yoomoneyx.PaymentYoo()
        payment_yoo.create(price, 'Archive')
        payment.create(price, 'Unlimited_7')
        text = f'<b>üíµ –ö –æ–ø–ª–∞—Ç–µ: </b>{price}‚ÇΩ\n\n<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã üëá</b>'
        
        await callback.message.edit_text(text, reply_markup=payment_methods_keyboard.keyboard)
        async with state.proxy() as data:
            data['payment'] = payment
            data['payment_yoo'] = payment_yoo
    except Exception as e:
        if e.args[0] == 'Qiwi wallet is banned':
            await callback.message.edit_text('<b>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∫–æ—à–µ–ª–µ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö—Ä–æ–¥–¥–µ—Ä–∂–∫—É.</b>')
        else:
            await callback.message.edit_text('<b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É</b>')

@dp.callback_query_handler(text='unlimited_month')
async def buy_unlimited_one_day(callback: types.CallbackQuery, state: FSMContext):
    try:
        price = get_price('Unlimited_30')
        payment = qiwi.Payment()
        payment_yoo = yoomoneyx.PaymentYoo()
        payment_yoo.create(price, 'Archive')
        payment.create(price, 'Unlimited_30')
        text = f'<b>üíµ –ö –æ–ø–ª–∞—Ç–µ: </b>{price}‚ÇΩ\n\n<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã üëá</b>'
        
        await callback.message.edit_text(text, reply_markup=payment_methods_keyboard.keyboard)
        async with state.proxy() as data:
            data['payment'] = payment
            data['payment_yoo'] = payment_yoo
    except Exception as e:
        if e.args[0] == 'Qiwi wallet is banned':
            await callback.message.edit_text('<b>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∫–æ—à–µ–ª–µ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö—Ä–æ–¥–¥–µ—Ä–∂–∫—É.</b>')
        else:
            await callback.message.edit_text('<b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É</b>')

@dp.callback_query_handler(text='phone_leaks')
async def buy_unlimited_one_day(callback: types.CallbackQuery, state: FSMContext):
    try:
        price = get_price('Phone_Number_Leaks')
        payment = qiwi.Payment()
        payment_yoo = yoomoneyx.PaymentYoo()
        payment_yoo.create(price, 'Archive')
        payment.create(price, 'Phone_Number_Leaks')
        text = f'<b>üíµ –ö –æ–ø–ª–∞—Ç–µ: </b>{price}‚ÇΩ\n\n<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã üëá</b>'
        
        await callback.message.edit_text(text, reply_markup=payment_methods_keyboard.keyboard)
        async with state.proxy() as data:
            data['payment'] = payment
            data['payment_yoo'] = payment_yoo
    except Exception as e:
        if e.args[0] == 'Qiwi wallet is banned':
            await callback.message.edit_text('<b>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∫–æ—à–µ–ª–µ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö—Ä–æ–¥–¥–µ—Ä–∂–∫—É.</b>')
        else:
            await callback.message.edit_text('<b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É</b>')

@dp.callback_query_handler(text='phone_info')
async def buy_unlimited_one_day(callback: types.CallbackQuery, state: FSMContext):
    try:
        price = get_price('Phone_Number_Info')
        payment = qiwi.Payment()
        payment_yoo = yoomoneyx.PaymentYoo()
        payment_yoo.create(price, 'Archive')
        payment.create(price, 'Phone_Number_Info')
        text = f'<b>üíµ –ö –æ–ø–ª–∞—Ç–µ: </b>{price}‚ÇΩ\n\n<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã üëá</b>'
        
        await callback.message.edit_text(text, reply_markup=payment_methods_keyboard.keyboard)
        async with state.proxy() as data:
            data['payment'] = payment
            data['payment_yoo'] = payment_yoo
    except Exception as e:
        if e.args[0] == 'Qiwi wallet is banned':
            await callback.message.edit_text('<b>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∫–æ—à–µ–ª–µ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö—Ä–æ–¥–¥–µ—Ä–∂–∫—É.</b>')
        else:
            await callback.message.edit_text('<b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É</b>')

@dp.callback_query_handler(text='buy_tiktok_archive')
async def buy_unlimited_one_day(callback: types.CallbackQuery, state: FSMContext):
    try:
        price = get_price('Tiktok_Videos')
        payment = qiwi.Payment()
        payment_yoo = yoomoneyx.PaymentYoo()
        payment_yoo.create(price, 'Archive')
        payment.create(price, 'Tiktok_Videos')
        text = f'<b>üíµ –ö –æ–ø–ª–∞—Ç–µ: </b>{price}‚ÇΩ\n\n<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã üëá</b>'
        
        await callback.message.edit_text(text, reply_markup=payment_methods_keyboard.keyboard)
        async with state.proxy() as data:
            data['payment'] = payment
            data['payment_yoo'] = payment_yoo
    except Exception as e:
        if e.args[0] == 'Qiwi wallet is banned':
            await callback.message.edit_text('<b>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∫–æ—à–µ–ª–µ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö—Ä–æ–¥–¥–µ—Ä–∂–∫—É.</b>')
        else:
            await callback.message.edit_text('<b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É</b>')

@dp.callback_query_handler(text='method_qiwi')
async def qiwi_payment(callback: types.CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        payment: qiwi.Payment = data['payment']
    type = payment.type
    link = hlink('–û–ø–ª–∞—Ç–∞', payment.invoice())
    amount = payment.amount
    text = f'‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n<b>‚ôªÔ∏è –û–ø–ª–∞—Ç–∞ QIWI | –ë–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π:</b>{link}\n<b>üí∞ –°—É–º–º–∞: </b>{amount} <b>üá∑üá∫ RUB</b>\n<b>üí≠ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: </b><code>{payment.comment}</code>\n\n<b>–í–ê–ñ–ù–û ‚ùóÔ∏è </b>–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–∏—à–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–ª–∞—Ç–µ–∂—É\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ'
    await callback.message.edit_text(text, reply_markup=payment_keyboard.make_keyboard(payment.invoice(), type))

@dp.callback_query_handler(text='method_yoo')
async def qiwi_payment(callback: types.CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        payment: yoomoneyx.PaymentYoo = data['payment_yoo']
    type = payment.type
    link = hlink('–û–ø–ª–∞—Ç–∞', payment.invoice())
    amount = payment.amount
    text = f'‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n<b>‚ôªÔ∏è –û–ø–ª–∞—Ç–∞ YOOMONEY | –ë–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π:</b>{link}\n<b>üí∞ –°—É–º–º–∞: </b>{amount} <b>üá∑üá∫ RUB</b>\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ'
    await callback.message.edit_text(text, reply_markup=payment_keyboard.make_keyboard(payment.invoice(), f'{type}', pref='YOO'))

@dp.callback_query_handler(text='cancel_payment')
async def cancel(callback: types.CallbackQuery):
    await callback.message.edit_text('‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ ‚ùå')